{"version":3,"sources":["utils/getWeb3.js","utils/theme.js","components/Header.js","components/SwapContractReader.js","components/UserActionList.js","components/CreateForm.js","components/CancelForm.js","components/AcceptForm.js","components/FullfillForm.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","async","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","theme","createMuiTheme","palette","primary","dark","blue","light","main","secondary","red","useStyles","makeStyles","root","flexGrow","link","textDecoration","color","display","justifyContent","alignItems","padding","name","logo","width","haight","margin","bar","background","text","Header","classes","className","AppBar","position","Toolbar","Grid","item","xs","to","Typography","variant","src","process","alt","mainTitle","marginBottom","input","textAlign","subtitle","marginTop","row","borderBottom","title","fontSize","fontWeight","overflowY","value","opacity","paddingLeft","SwapContractReader","props","onChange","exists","offeredEth","requestedBtc","requestedEthCollateral","endsAt","eEthAddress","eBtcAddress","bEthAddress","transactionHash","nbConfirmations","voutAddress","voutValue","fullfilled","Paper","container","justify","align","TextField","id","e","target","label","fullWidth","InputLabelProps","shrink","direction","utils","fromWei","Date","parseInt","toISOString","ethPaper","overflow","ethHeader","btcPaper","btcHeader","menu","flexDirection","listStyle","ethItem","btcItem","ethButton","btcButton","UserActionList","activeClassName","Button","active","form","maxWidth","minWidth","paper","CreateForm","useState","setOfferedEth","setRequestedBtc","setRequestedEthCollateral","handleCreateContract","noValidate","autoComplete","error","helperText","InputProps","endAdornment","InputAdornment","type","disabled","button","onClick","CancelForm","handleCancelContract","AcceptForm","handleAcceptContract","readOnly","setTransactionHash","handleFullfillContract","titleContainer","message","start","howToUseContainer","steps","marginLeft","Home","md","GAS","GAS_PRICE","App","state","accounts","contract","componentDidMount","loopRefresh","component","refreshState","setTimeout","eth","getAccounts","net","getId","networkId","Error","deployedNetwork","MyContract","networks","Contract","abi","address","setState","on","newAccounts","alert","methods","getSwapContract","call","swapContractInfo","toString","hexToAscii","handleUpdateEBtcAddress","initiateSwapContract","Number","toFixed","toHex","toWei","send","from","gas","gasPrice","cancelSwapContract","acceptSwapContract","satisfySwapContract","this","ThemeProvider","basename","path","default","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f5898a3.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import red from \"@material-ui/core/colors/red\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      dark: blue[900],\n      light: blue[600],\n      main: blue[800]\n    },\n    secondary: {\n      dark: red[900],\n      light: red[500],\n      main: red[800]\n    }\n  }\n});\n","import React from \"react\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  },\n  link: {\n    textDecoration: 'none',\n    color: '#fff',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: '0 32px'\n  },\n  name: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  logo: {\n    width: '32px',\n    haight: '32px',\n    margin: '3px'\n  },\n  bar: {\n    background: `${blue[900]}`\n  },\n  text: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: '0 32px'\n  }\n});\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.bar}>\n        <Toolbar>\n          <Grid item xs>\n            <Link to=\"/\" className={classes.link}>\n              <Typography variant=\"h6\" color=\"inherit\" className={classes.name}>\n                Link<img src={`${process.env.PUBLIC_URL}/logo.png`} alt=\"logo\" className={classes.logo} />wap\n              </Typography>\n            </Link>\n          </Grid>\n          <Grid item xs className={classes.text}>\n            <Typography variant=\"body2\" color=\"inherit\">\n              Trustlessly trade ethereum for bitcoin\n            </Typography>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField } from \"@material-ui/core\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    margin: '24px',\n    padding: '24px',\n    width: 'calc(100% - 96px)'\n  },\n  mainTitle: {\n    marginBottom: '24px'\n  },\n  input: {\n    marginBottom: '24px',\n    textAlign: 'left'\n  },\n  subtitle: {\n    marginTop: '24px',\n    background: `${blue[500]}`,\n    color: '#fff',\n    width: '100%'\n  },\n  row: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.2)',\n    padding: '6px'\n  },\n  title: {\n    fontSize: '14px',\n    fontWeight: 500,\n    textAlign: 'right',\n    overflowY: 'scroll'\n  },\n  value: {\n    fontSize: '14px',\n    opacity: 0.8,\n    textAlign: 'right',\n    overflowY: 'scroll',\n    paddingLeft: '8px',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});\n\nexport default function SwapContractReader(props) {\n  const classes = useStyles();\n  const {\n    web3,\n    onChange,\n    exists,\n    offeredEth,\n    requestedBtc,\n    requestedEthCollateral,\n    endsAt,\n    eEthAddress,\n    eBtcAddress,\n    bEthAddress,\n    transactionHash,\n    nbConfirmations,\n    voutAddress,\n    voutValue,\n    fullfilled\n  } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.mainTitle}>\n        Contract Explorer\n      </Typography>\n\n      <Grid container justify=\"center\" align=\"center\" item xs={12}>\n        <Grid item xs={12}>\n          <TextField\n            id=\"eBtcAddress\"\n            className={classes.input}\n            value={eBtcAddress}\n            onChange={e => onChange(e.target.value)}\n            label=\"Contract Identifier (Receiving BTC Address)\"\n            fullWidth\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </Grid>\n        <Grid container item xs={12} direction=\"row\">\n\n          <Grid container item xs={12}>\n            <Typography variant=\"subtitle1\" color=\"inherit\" className={classes.subtitle}>\n              Contract Information\n            </Typography>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>Exists: </Grid>\n            <Grid item xs={8} className={classes.value}>{exists ? \"Yes\" : \"No\"}</Grid>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>Fullfilled: </Grid>\n            <Grid item xs={8} className={classes.value}>{fullfilled && \"Yes\"}</Grid>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>Offered: </Grid>\n            <Grid item xs={8} className={classes.value}>{offeredEth && web3.utils.fromWei(offeredEth, 'ether')} ETH</Grid>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>Requested: </Grid>\n            <Grid item xs={8} className={classes.value}>{requestedBtc} BTC</Grid>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>Collateral: </Grid>\n            <Grid item xs={8} className={classes.value}>{requestedEthCollateral && web3.utils.fromWei(requestedEthCollateral, 'ether')} ETH</Grid>\n          </Grid>\n\n          <Grid container item xs={12}>\n            <Typography variant=\"subtitle1\" color=\"inherit\" className={classes.subtitle}>\n              ETH Trader Information\n            </Typography>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>BTC address: </Grid>\n            <Grid item xs={8} className={classes.value}>{eBtcAddress}</Grid>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>ETH address: </Grid>\n            <Grid item xs={8} className={classes.value}>{eEthAddress}</Grid>\n          </Grid>\n\n          <Grid container item xs={12}>\n            <Typography variant=\"subtitle1\" color=\"inherit\" className={classes.subtitle}>\n              BTC Trader Information\n            </Typography>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>ETH address: </Grid>\n            <Grid item xs={8} className={classes.value}>{bEthAddress !== '0x0000000000000000000000000000000000000000' && bEthAddress}</Grid>\n          </Grid>\n\n          <Grid container item xs={12}>\n            <Typography variant=\"subtitle1\" color=\"inherit\" className={classes.subtitle}>\n              BTC Transaction Confirmation\n            </Typography>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>Fullfill before: </Grid>\n            <Grid item xs={8} className={classes.value}>{(endsAt === '0' || endsAt === null) ? '' : new Date(parseInt(endsAt)*1000).toISOString()}</Grid>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>Transaction hash: </Grid>\n            <Grid item xs={8} className={classes.value}>{transactionHash}</Grid>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>Nb. confirmations: </Grid>\n            <Grid item xs={8} className={classes.value}>{nbConfirmations}</Grid>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>Receiving address: </Grid>\n            <Grid item xs={8} className={classes.value}>{voutAddress}</Grid>\n          </Grid>\n\n          <Grid container item xs={12} className={classes.row}>\n            <Grid item xs={4} className={classes.title}>Received value: </Grid>\n            <Grid item xs={8} className={classes.value}>{voutValue}</Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button, Grid, Paper, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 'calc(100% - 48px)',\n    margin: '24px',\n  },\n  ethPaper: {\n    margin: '0 8px',\n    overflow: 'hidden'\n  },\n  ethHeader: {\n    background: '#33365f',\n    color: '#fff',\n    padding: '8px'\n  },\n  btcPaper: {\n    margin: '0 8px',\n    overflow: 'hidden'\n  },\n  btcHeader: {\n    background: '#ff8800',\n    color: '#fff',\n    padding: '8px'\n  },\n  menu: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    listStyle: 'none',\n    margin: 0,\n    padding: 0\n  },\n  ethItem: {\n    display: 'block',\n    textDecoration: 'none',\n    margin: '12px',\n    borderBottom: `2px solid transparent`,\n    \"&.active\": {\n      borderBottom: `2px solid #33365f`\n    }\n  },\n  btcItem: {\n    display: 'block',\n    textDecoration: 'none',\n    margin: '12px',\n    borderBottom: `2px solid transparent`,\n    \"&.active\": {\n      borderBottom: `2px solid #FF8800`\n    }\n  },\n  ethButton: {\n    fontSize: '13px',\n    padding: '0px 4px',\n    fontWeight: 500,\n    color: '#33365f'\n  },\n  btcButton: {\n    fontSize: '13px',\n    padding: '0px 4px',\n    fontWeight: 500,\n    color: '#FF8800'\n  }\n});\n\nexport default function UserActionList() {\n  const classes = useStyles();\n\n  return (\n    <nav className={classes.root}>\n      <Grid container direction=\"row\">\n        <Grid item xs={6}>\n          <Paper className={classes.ethPaper}>\n            <Typography variant=\"h6\" className={classes.ethHeader}>\n              Trade your ETH\n            </Typography>\n\n            <ul className={classes.menu}>\n              <li>\n                <NavLink to=\"/contract/create\" className={classes.ethItem} activeClassName={'active'}>\n                  <Button className={classes.ethButton}>\n                    Create contract\n                  </Button>\n                </NavLink>\n              </li>\n              <li >\n                <NavLink to=\"/contract/cancel\" className={classes.ethItem} activeClassName={'active'}>\n                  <Button className={classes.ethButton}>\n                    Cancel contract\n                  </Button>\n                </NavLink>\n              </li>\n            </ul>\n          </Paper>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.btcPaper}>\n            <Typography variant=\"h6\" className={classes.btcHeader}>\n              Trade your BTC\n            </Typography>\n\n            <ul className={classes.menu}>\n              <li>\n                <NavLink to=\"/contract/accept\" className={classes.btcItem} activeClassName={'active'}>\n                  <Button color=\"secondary\" className={classes.btcButton}>\n                    Accept contract\n                  </Button>\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/contract/fullfill\" className={classes.btcItem} activeClassName={classes.active}>\n                  <Button color=\"secondary\" className={classes.btcButton}>\n                    Fullfill contract\n                  </Button>\n                </NavLink>\n              </li>\n            </ul>\n          </Paper>\n        </Grid>\n      </Grid>\n    </nav>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, InputAdornment, Paper, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '600px',\n    minWidth: '400px',\n    padding: '24px'\n  },\n  paper: {\n    padding: '24px'\n  },\n  input: {\n    marginBottom: '32px'\n  },\n  title: {\n    marginBottom: '24px'\n  }\n});\n\nexport default function CreateForm(props) {\n  const [offeredEth, setOfferedEth] = useState(0);\n  const [requestedBtc, setRequestedBtc] = useState(0);\n  const [requestedEthCollateral, setRequestedEthCollateral] = useState(0);\n\n  const classes = useStyles();\n  const {\n    onChange,\n    handleCreateContract,\n    exists,\n    eBtcAddress\n  } = props;\n\n  return (\n    <div className={classes.root} >\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <Paper className={classes.paper}>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            Create a Contract\n          </Typography>\n\n          <TextField\n            id=\"eBtcAddress\"\n            className={classes.input}\n            value={eBtcAddress}\n            onChange={e => onChange(e.target.value)}\n            label=\"Your receiving BTC address\"\n            fullWidth\n            variant=\"outlined\"\n            error={exists}\n            helperText={exists && \"Please use a BTC address not already used in a contract\"}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <TextField\n            id=\"offeredEth\"\n            className={classes.input}\n            value={offeredEth}\n            onChange={e => setOfferedEth(e.target.value)}\n            label=\"How much ETH are you offering\"\n            fullWidth\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">ETH</InputAdornment>,\n            }}\n            type=\"number\"\n            disabled={exists}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <TextField\n            id=\"requestedBtc\"\n            className={classes.input}\n            value={requestedBtc}\n            onChange={e => setRequestedBtc(e.target.value)}\n            label=\"How much BTC are you requesting\"\n            fullWidth\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">BTC</InputAdornment>,\n            }}\n            type=\"number\"\n            disabled={exists}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <TextField\n            id=\"requestedEthCollateral\"\n            className={classes.input}\n            value={requestedEthCollateral}\n            onChange={e => setRequestedEthCollateral(e.target.value)}\n            label=\"How much ETH are you requesting as a collateral\"\n            fullWidth\n            variant=\"outlined\"\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">ETH</InputAdornment>,\n            }}\n            type=\"number\"\n            disabled={exists}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <Button\n            color=\"secondary\"\n            className={classes.button}\n            variant=\"contained\"\n            onClick={() => handleCreateContract({\n              offeredEth,\n              requestedBtc,\n              requestedEthCollateral\n            })}\n            fullWidth\n            disabled={exists || offeredEth === 0 || requestedBtc === 0 || requestedEthCollateral === 0}\n          >\n            Create contract\n          </Button>\n        </Paper>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, Paper, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '600px',\n    minWidth: '400px',\n    padding: '24px'\n  },\n  paper: {\n    padding: '24px'\n  },\n  input: {\n    marginBottom: '32px'\n  },\n  title: {\n    marginBottom: '24px'\n  }\n});\n\nexport default function CancelForm(props) {\n  const classes = useStyles();\n  const {\n    onChange,\n    handleCancelContract,\n    exists,\n    eBtcAddress\n  } = props;\n\n  return (\n    <div className={classes.root} >\n\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <Paper className={classes.paper}>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            Cancel a Contract\n          </Typography>\n          <TextField\n            id=\"eBtcAddress\"\n            className={classes.input}\n            value={eBtcAddress}\n            onChange={e => onChange(e.target.value)}\n            label=\"The receiving BTC address\"\n            fullWidth\n            variant=\"outlined\"\n            error={!exists}\n            helperText={!exists && \"Please enter a BTC address used in a contract\"}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <Button\n            color=\"secondary\"\n            className={classes.button}\n            variant=\"contained\"\n            disabled={!exists}\n            onClick={() => handleCancelContract()}\n            fullWidth\n          >\n            Cancel contract\n          </Button>\n        </Paper>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, InputAdornment, Paper, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '600px',\n    minWidth: '400px',\n    padding: '24px'\n  },\n  paper: {\n    padding: '24px'\n  },\n  input: {\n    marginBottom: '32px'\n  },\n  title: {\n    marginBottom: '24px'\n  }\n});\n\nexport default function AcceptForm(props) {\n  const classes = useStyles();\n  const {\n    web3,\n    onChange,\n    handleAcceptContract,\n    exists,\n    eBtcAddress,\n    requestedEthCollateral\n  } = props;\n\n  return (\n    <div className={classes.root} >\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <Paper className={classes.paper}>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            Accept a Contract\n          </Typography>\n\n          <TextField\n            id=\"eBtcAddress\"\n            className={classes.input}\n            value={eBtcAddress}\n            onChange={e => onChange(e.target.value)}\n            label=\"The receiving BTC address\"\n            fullWidth\n            variant=\"outlined\"\n            error={!exists}\n            helperText={!exists && \"Please enter a BTC address used in a contract\"}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <TextField\n            id=\"requestedEthCollateral\"\n            className={classes.input}\n            value={requestedEthCollateral && web3.utils.fromWei(requestedEthCollateral, 'ether')}\n            label=\"How much ETH is requested as a collateral\"\n            fullWidth\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">ETH</InputAdornment>,\n            }}\n            readOnly\n          />\n\n          <Button\n            color=\"secondary\"\n            className={classes.button}\n            variant=\"contained\"\n            disabled={!exists}\n            onClick={() => handleAcceptContract()}\n            fullWidth\n          >\n            Accept contract\n          </Button>\n        </Paper>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Button, Paper, TextField } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    marginTop: '40px'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: '600px',\n    minWidth: '400px',\n    padding: '24px'\n  },\n  paper: {\n    padding: '24px'\n  },\n  input: {\n    marginBottom: '32px'\n  },\n  title: {\n    marginBottom: '24px'\n  }\n});\n\nexport default function AcceptForm(props) {\n  const [transactionHash, setTransactionHash] = useState('');\n\n  const classes = useStyles();\n  const {\n    onChange,\n    handleFullfillContract,\n    exists,\n    eBtcAddress,\n    bEthAddress\n  } = props;\n\n  return (\n    <div className={classes.root} >\n      <form className={classes.form} noValidate autoComplete=\"off\">\n        <Paper className={classes.paper}>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            Fullfill a Contract\n          </Typography>\n\n          <TextField\n            id=\"eBtcAddress\"\n            className={classes.input}\n            value={eBtcAddress}\n            onChange={e => onChange(e.target.value)}\n            label=\"The receiving BTC address\"\n            fullWidth\n            variant=\"outlined\"\n            error={!exists}\n            helperText={!exists && \"Please enter a BTC address used in a contract\"}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <TextField\n            id=\"transactionHash\"\n            className={classes.input}\n            value={transactionHash}\n            label=\"BTC transaction ID with at least 6 confirmations\"\n            onChange={e => setTransactionHash(e.target.value)}\n            fullWidth\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            disabled={!exists || bEthAddress === '0x0000000000000000000000000000000000000000'}\n          />\n\n          <Button\n            color=\"secondary\"\n            className={classes.button}\n            variant=\"contained\"\n            disabled={!exists || bEthAddress === '0x0000000000000000000000000000000000000000'}\n            onClick={() => handleFullfillContract({\n              transactionHash\n            })}\n            fullWidth\n          >\n            Fullfill contract\n          </Button>\n        </Paper>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button, Paper, Grid, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  titleContainer: {\n    textAlign: 'left',\n    padding: '60px 100px 0 100px',\n  },\n  message: {\n    marginTop: '24px',\n    maxWidth: '600px'\n  },\n  link: {\n    textDecoration: 'none'\n  },\n  start: {\n    marginTop: '24px'\n  },\n  howToUseContainer: {\n    textAlign: 'center',\n    padding: '60px 100px 0 100px',\n  },\n  steps: {\n    marginTop: '36px',\n  },\n  ethPaper: {\n    margin: '0 8px',\n    overflow: 'hidden',\n    textAlign: 'left'\n  },\n  ethHeader: {\n    background: '#33365f',\n    color: '#fff',\n    padding: '8px 48px',\n    textAlign: 'center'\n  },\n  btcPaper: {\n    margin: '0 8px',\n    overflow: 'hidden',\n    textAlign: 'left'\n  },\n  btcHeader: {\n    background: '#ff8800',\n    color: '#fff',\n    padding: '8px',\n    textAlign: 'center'\n  },\n  ethItem: {\n    display: 'block',\n    textDecoration: 'none',\n    margin: '24px 12px 0',\n    borderBottom: `2px solid transparent`,\n    \"&.active\": {\n      borderBottom: `2px solid #33365f`\n    }\n  },\n  btcItem: {\n    display: 'block',\n    textDecoration: 'none',\n    margin: '24px 12px 0',\n    borderBottom: `2px solid transparent`,\n    \"&.active\": {\n      borderBottom: `2px solid #FF8800`\n    }\n  },\n  ethButton: {\n    fontSize: '15px',\n    padding: '0px 4px',\n    fontWeight: 500,\n    color: '#33365f'\n  },\n  btcButton: {\n    fontSize: '15px',\n    padding: '0px 4px',\n    fontWeight: 500,\n    color: '#FF8800'\n  },\n  text: {\n    marginLeft: '16px',\n    marginBottom: '24px'\n  }\n});\n\nexport default function Home() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.titleContainer}>\n        <Typography variant=\"h3\" color=\"inherit\" className={classes.title}>\n          Welcome to LinkSwap\n        </Typography>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.message}>\n          LinkSwap is the first step towards a truly trustless way to trade Ethereum for Bitcoin in a peer-to-peer fashion.\n        </Typography>\n\n\n        <NavLink to=\"/contract/create\" className={classes.link}>\n          <Button\n            color=\"secondary\"\n            className={classes.start}\n            variant=\"contained\"\n          >\n            Get Started\n          </Button>\n        </NavLink>\n      </div>\n\n      <div className={classes.howToUseContainer}>\n        <Typography variant=\"h3\" color=\"inherit\" className={classes.title}>\n          How To Use\n        </Typography>\n\n        <Grid container direction=\"row\" className={classes.steps}>\n          <Grid item xs={12} md={6}>\n            <Paper className={classes.ethPaper}>\n              <Typography variant=\"h6\" className={classes.ethHeader}>\n                Trade your ETH\n              </Typography>\n\n              <NavLink to=\"/contract/create\" className={classes.ethItem}>\n                <Button className={classes.ethButton}>\n                  Step 1 - Create contract\n                </Button>\n              </NavLink>\n              <Typography variant=\"body2\" className={classes.text}>\n                Creates a contract with an offer (ETH), a request (BTC) and a requested collateral (ETH). Indentify the contract using you own BTC address. Ideally, that address would be brand new and have a length of less than 32 characters.\n              </Typography>\n\n              <NavLink to=\"/contract/cancel\" className={classes.ethItem}>\n                <Button className={classes.ethButton}>\n                  Optional - Cancel contract\n                </Button>\n              </NavLink>\n              <Typography variant=\"body2\" className={classes.text}>\n                You can cancel the contract and retrieve your funds if it hasn't been accepted yet, or if the timelapse (4 hours) has passed after acceptation. Once cancelled, the contract cannot be seen anymore and that address cannot be used once again.\n              </Typography>\n            </Paper>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Paper className={classes.btcPaper}>\n              <Typography variant=\"h6\" className={classes.btcHeader}>\n                Trade your BTC\n              </Typography>\n\n              <NavLink to=\"/contract/accept\" className={classes.btcItem}>\n                <Button color=\"secondary\" className={classes.btcButton}>\n                  Step 1 - Accept contract\n                </Button>\n              </NavLink>\n              <Typography variant=\"body2\" className={classes.text}>\n                Use an external platform (such as a subreddit) to find someone offering to trade ETH. You can view his contract's information by inputting his requesting BTC address.\n              </Typography>\n\n              <div className={classes.btcItem}>\n                <Button color=\"secondary\" className={classes.btcButton}>\n                  Step 2 - BTC payment\n                </Button>\n              </div>\n              <Typography variant=\"body2\" className={classes.text}>\n                From you own BTC private wallet, send the <b>exact</b> BTC amount to the requester's BTC address <b>in a single transaction</b>. <b>Keep note of the transaction ID</b>.\n              </Typography>\n\n              <NavLink to=\"/contract/fullfill\" className={classes.btcItem}>\n                <Button color=\"secondary\" className={classes.btcButton}>\n                  Step 3 - Fullfill contract\n                </Button>\n              </NavLink>\n              <Typography variant=\"body2\" className={classes.text}>\n                Once your BTC transaction has reached at least 6 confirmations, trigger the contract validation. The contract will validate the external BTC transaction using the Honeycomb Oracle through Tatum's Blockchain API. If the confirmation is validated, you will receive the requester's ETH as well as your collateral back.\n              </Typography>\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport {\n  HashRouter,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { Typography, Grid } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport MyContract from \"./contracts/MyContract.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nimport { theme } from \"./utils/theme\";\nimport Header from \"./components/Header\";\nimport SwapContractReader from \"./components/SwapContractReader\";\nimport UserActionList from \"./components/UserActionList\";\nimport CreateForm from \"./components/CreateForm\";\nimport CancelForm from \"./components/CancelForm\";\nimport AcceptForm from \"./components/AcceptForm\";\nimport FullfillForm from \"./components/FullfillForm\";\nimport Home from \"./components/Home\";\nimport \"./App.css\";\n\nconst GAS = 1000000;\nconst GAS_PRICE = \"40000000000\";\n\nclass App extends Component {\n  state = {\n    web3: null,\n    accounts: null,\n    contract: null,\n    exists: false,\n    offeredEth: null,\n    requestedBtc: null,\n    requestedEthCollateral: null,\n    endsAt: null,\n    eEthAddress: null,\n    eBtcAddress: '',\n    bEthAddress: null,\n    transactionHash: null,\n    nbConfirmations: null,\n    voutAddress: null,\n    voutValue: null,\n    fullfilled: false\n  };\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n\n      const accounts = await web3.eth.getAccounts();\n\n      const networkId = await web3.eth.net.getId();\n      if (networkId !== 3) {\n        throw new Error(\"Select the Ropsten network from your MetaMask plugin\");\n      }\n      const deployedNetwork = MyContract.networks[networkId];\n      const contract = new web3.eth.Contract(\n        MyContract.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n\n      this.setState({ web3, accounts, contract });\n\n      window.ethereum.on(\"accountsChanged\", async accounts => {\n        const newAccounts = await web3.eth.getAccounts();\n        this.setState({ accounts: newAccounts });\n      });\n\n      // Refresh on-chain data every 1 second\n      const component = this;\n      async function loopRefresh() {\n        await component.refreshState();\n        setTimeout(loopRefresh, 1000);\n      }\n      loopRefresh();\n    } catch (error) {\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  };\n\n  refreshState = async () => {\n    const swapContractInfo = await this.state.contract.methods\n      .getSwapContract(this.state.eBtcAddress)\n      .call();\n\n    if (swapContractInfo[0]) {\n      this.setState({\n        exists: true,\n        offeredEth: swapContractInfo[1].toString(),\n        requestedBtc: swapContractInfo[2].toString(),\n        requestedEthCollateral: swapContractInfo[3].toString(),\n        endsAt: swapContractInfo[4].toString(),\n        eEthAddress: swapContractInfo[5].toString(),\n        bEthAddress: swapContractInfo[6].toString(),\n        transactionHash: swapContractInfo[7].toString(),\n        nbConfirmations: this.state.web3.utils.hexToAscii(swapContractInfo[8].toString()),\n        voutAddress: this.state.web3.utils.hexToAscii(swapContractInfo[9].toString()),\n        voutValue: this.state.web3.utils.hexToAscii(swapContractInfo[10].toString()),\n        fullfilled: swapContractInfo[11],\n      });\n    } else {\n      this.setState({\n        exists: false,\n        offeredEth: null,\n        requestedBtc: null,\n        requestedEthCollateral: null,\n        endsAt: null,\n        eEthAddress: null,\n        bEthAddress: null,\n        transactionHash: null,\n        nbConfirmations: null,\n        voutAddress: null,\n        voutValue: null,\n        fullfilled: false\n      });\n    }\n  };\n\n  handleUpdateEBtcAddress = (value) => {\n    this.setState({ eBtcAddress: value });\n  };\n\n  handleCreateContract = async ({offeredEth, requestedBtc, requestedEthCollateral}) => {\n    const {web3, contract, accounts, eBtcAddress} = this.state;\n\n    await contract.methods\n      .initiateSwapContract(\n        eBtcAddress.toString(),\n        Number(requestedBtc).toFixed(8).toString(),\n        web3.utils.toHex(web3.utils.toWei(requestedEthCollateral, 'ether').toString())\n      )\n      .send({\n        from: accounts[0],\n        value: web3.utils.toWei(offeredEth, 'ether'),\n        gas: GAS,\n        gasPrice: GAS_PRICE\n      });\n  }\n\n  handleCancelContract = async () => {\n    const {contract, accounts, eBtcAddress} = this.state;\n\n    await contract.methods\n      .cancelSwapContract(\n        eBtcAddress.toString(),\n      )\n      .send({\n        from: accounts[0],\n        gas: GAS,\n        gasPrice: GAS_PRICE\n      });\n  }\n\n  handleAcceptContract = async () => {\n    const {contract, accounts, eBtcAddress, requestedEthCollateral} = this.state;\n\n    await contract.methods\n      .acceptSwapContract(\n        eBtcAddress.toString(),\n      )\n      .send({\n        from: accounts[0],\n        value: requestedEthCollateral,\n        gas: GAS,\n        gasPrice: GAS_PRICE\n      });\n  }\n\n  handleFullfillContract = async ({transactionHash}) => {\n    const {contract, accounts, eBtcAddress} = this.state;\n\n    await contract.methods\n      .satisfySwapContract(\n        eBtcAddress.toString(),\n        transactionHash.toString()\n      )\n      .send({\n        from: accounts[0],\n        gas: GAS,\n        gasPrice: GAS_PRICE\n      });\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <ThemeProvider theme={theme}>\n          <div className=\"App\">\n            <HashRouter>\n              <Header />\n            </HashRouter>\n\n            <Typography>Loading Web3, accounts, and contract...</Typography>\n          </div>\n        </ThemeProvider>\n      );\n    }\n\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"App\">\n          <HashRouter basename={process.env.PUBLIC_URL}>\n            <Header />\n\n            <Switch>\n              <Route path=\"/contract\">\n                <Grid container direction=\"row\">\n                  <Grid container item xs={12} md={4}>\n                    <SwapContractReader\n                      onChange={(value) => this.handleUpdateEBtcAddress(value)}\n                      {...this.state}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={8}>\n                      <UserActionList />\n\n                      <Switch>\n                        <Route path=\"/contract/create\">\n                          <CreateForm\n                            onChange={(value) => this.handleUpdateEBtcAddress(value)}\n                            handleCreateContract={this.handleCreateContract}\n                            exists={this.state.exists}\n                            eBtcAddress={this.state.eBtcAddress}\n                          />\n                        </Route>\n                        <Route path=\"/contract/cancel\">\n                          <CancelForm\n                            onChange={(value) => this.handleUpdateEBtcAddress(value)}\n                            handleCancelContract={this.handleCancelContract}\n                            exists={this.state.exists}\n                            eBtcAddress={this.state.eBtcAddress}\n                          />\n                        </Route>\n                        <Route path=\"/contract/accept\">\n                          <AcceptForm\n                            onChange={(value) => this.handleUpdateEBtcAddress(value)}\n                            handleAcceptContract={this.handleAcceptContract}\n                            exists={this.state.exists}\n                            eBtcAddress={this.state.eBtcAddress}\n                            requestedEthCollateral={this.state.requestedEthCollateral}\n                            web3={this.state.web3}\n                          />\n                        </Route>\n                        <Route path=\"/contract/fullfill\">\n                          <FullfillForm\n                            onChange={(value) => this.handleUpdateEBtcAddress(value)}\n                            handleFullfillContract={this.handleFullfillContract}\n                            exists={this.state.exists}\n                            eBtcAddress={this.state.eBtcAddress}\n                            bEthAddress={this.state.bEthAddress}\n                          />\n                        </Route>\n                      </Switch>\n                  </Grid>\n                </Grid>\n              </Route>\n\n              <Route default>\n                <Home />\n              </Route>\n            </Switch>\n          </HashRouter>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}